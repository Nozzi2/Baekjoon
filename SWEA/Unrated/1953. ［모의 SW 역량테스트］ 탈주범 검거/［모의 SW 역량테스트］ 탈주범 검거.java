import java.io.*;
import java.util.*;

/* 231011 19:00 시작
도둑은 움직이지 않고 멈출 수 있다.
DFS로 방문할 수 있는 모든 칸수를 계산하는 문제임.


!!갈림길을 만들어서 정상적으로 방문하는지 체크해볼것!!
 */
public class Solution {
	
	static int[] dr= {-1,0,1,0};
	static int[] dc= {0,-1,0,1};
	static int sizeR, sizeC, targetDepth, count;
	
	static class Pos {
		int r;
		int c;
		boolean isPipe;
		boolean isVisited;
		int visitedStep;
		boolean[] isGos;
		int type;
		
		public Pos(int r, int c, int type) {
			this.r = r;
			this.c = c;
			this.type = type;
			this.visitedStep = 21;
			if(type==0) {
				isPipe = false;
				isVisited = true;
			} else {
				isPipe = true;
				isVisited = false;
			}
			
			isGos = new boolean[4];
			switch(type) { //상좌하우
			case 1:
				isGos = new boolean[] {true,true,true,true};
				break;
			case 2:
				isGos = new boolean[] {true,false,true,false};
				break;
			case 3:
				isGos = new boolean[] {false,true,false,true};
				break;
			case 4:
				isGos = new boolean[] {true,false,false,true};
				break;
			case 5:
				isGos = new boolean[] {false,false,true,true};
				break;
			case 6:
				isGos = new boolean[] {false,true,true,false};
				break;
			case 7:
				isGos = new boolean[] {true,true,false,false};
				break;
			}
		}
		
		public Pos(int r, int c) {
			this.r = r;
			this.c = c;
		}
		
		boolean isOut() {
			return r<0 || c<0 || r>=sizeR || c>=sizeC;
		}
		
		//┼─│┌┐┘└	
		@Override
		public String toString() {
			String s=null;
			switch(type) { //상좌하우
			case 1:
				s = !isVisited?"┼":"╋";
				break;
			case 2:
				s = !isVisited?"│":"┃";
				break;
			case 3:
				s = !isVisited?"─":"━";
				break;
			case 4:
				s = !isVisited?"└":"┗";
				break;
			case 5:
				s = !isVisited?"┌":"┏";
				break;
			case 6:
				s = !isVisited?"┐":"┓";
				break;
			case 7:
				s = !isVisited?"┘":"┛";
				break;
			default:
				s = ".";
				break;
			}
			return s;
		}
		
		
	}

	public static void main(String[] args) throws Exception{
		//BufferedReader br = new BufferedReader(new FileReader("/Users/nozzi/eclipse-workspace/codetree/src/swea/input.txt"));
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int TEST_CASE = Integer.parseInt(br.readLine());
		
		StringTokenizer st;
		StringBuilder sb= new StringBuilder();
		for(int T=1; T<=TEST_CASE; T++) {
			st = new StringTokenizer(br.readLine());
			sizeR = Integer.parseInt(st.nextToken());
			sizeC = Integer.parseInt(st.nextToken());
			int holeR = Integer.parseInt(st.nextToken());
			int holeC = Integer.parseInt(st.nextToken());
			targetDepth = Integer.parseInt(st.nextToken());
			
			Pos[][] matrix = new Pos[sizeR][sizeC];
			for(int i=0; i<sizeR; i++) {
				st = new StringTokenizer(br.readLine());
				for(int j=0; j<sizeC; j++) {
					int type = Integer.parseInt(st.nextToken());
					Pos p = new Pos(i,j,type);
					matrix[i][j] = p;
				}
			}
			
			Pos start = new Pos(holeR, holeC);
			matrix[start.r][start.c].isVisited = true;
			matrix[start.r][start.c].visitedStep = 1;
			count = 1;
			
			dfs(matrix, start, 1);
			
//			for(int i=0; i<sizeR; i++) {
//				for(int j=0; j<sizeC; j++) {
//					System.out.printf("(%d,%d) ",i,j);
//					System.out.println(matrix[i][j].isPipe);
//				}
//			}
//			printMatrix(matrix);
//			printDepth(matrix);
			
			sb.append("#"+T+" ").append(count).append("\n");
			
		}//for T end
		
		
		System.out.println(sb.toString());	
	}

	static void printMatrix(Pos[][] matrix) {
		for(int i=0; i<sizeR; i++) {
			for(int j=0; j<sizeC; j++) {
				System.out.print(matrix[i][j]);
			}
			System.out.println();
		}
		System.out.println();
	}
	
	static void printDepth(Pos[][] matrix) {
		for(int i=0; i<sizeR; i++) {
			for(int j=0; j<sizeC; j++) {
				System.out.print(matrix[i][j].visitedStep);
			}
			System.out.println();
		}
		System.out.println();
	}
	
	static void dfs(Pos[][] matrix, Pos s, int depth) {
		if(depth == targetDepth) return;
		
//		System.out.printf("(%d,%d) : %d\n",s.r,s.c,count);
		
		for(int d=0; d<4; d++) {
			if(!matrix[s.r][s.c].isGos[d]) continue;
//			System.out.println("상0 좌1 하2 우3 > "+d);
			
			int nr = s.r+dr[d];
			int nc = s.c+dc[d];
//			System.out.printf("(%d, %d) ",nr,nc);
			if(nr<0 || nc<0 || nr>=sizeR || nc>=sizeC) {
//				System.out.println("범위 벗어남");
				continue;
			}
			Pos next = matrix[nr][nc];
			
			if(!next.isPipe) {
//				System.out.println("파이프 아님");
				continue;
			}
			
			int nd = (d+2)%4;
			if(!next.isGos[nd]) {
//				System.out.println("반대쪽 파이프 연결 안됨");
				continue;
			}
			/*
			방문한 적이 없으면
				카운트 증가
				방문처리
				현재 위치에 몇초에 도착했는지 저장
				다음 dfs 탐색
			있으면
				더빨리 도착한적이 있는지 검사
				현재탐색시간보다 더 짧다면
					탐색종료
				더 길다면
					현재 위치에 몇초에 도착했는지 저장
					다음DFS탐색 
			*/
			
//			System.out.println("연결 가능함!!!!!!!!!");
			if(!next.isVisited) {
				count++;
				next.isVisited = true;
				next.visitedStep = depth+1;
				dfs(matrix, next, depth+1);
			} else {
				if(next.visitedStep < depth) {
//					System.out.println("방문한적 있음");
					continue;
				}
				next.visitedStep = depth+1;
				dfs(matrix, next, depth+1);
			}
			
			
		}
		
	}

}
/*
5
5 6 2 1 3
0 0 5 3 6 0
0 0 2 0 2 0
3 3 1 3 7 0
0 0 0 0 0 0
0 0 0 0 0 0
5 6 2 2 6
3 0 0 0 0 3
2 0 0 0 0 6
1 3 1 1 3 1
2 0 2 0 0 2
0 0 4 3 1 1
10 10 4 3 9
0 0 0 0 0 0 0 0 0 0
0 0 0 7 5 0 5 0 0 0
0 0 3 2 2 6 0 0 0 0
0 4 7 2 2 2 7 0 0 4
0 3 0 1 1 2 2 0 0 5
0 5 6 1 1 1 1 6 2 5
7 4 1 2 0 0 4 6 0 0
5 3 1 7 0 2 2 6 5 7
7 3 2 1 1 7 1 0 2 7
3 4 0 0 4 0 5 1 0 1
20 20 13 11 13
0 0 0 1 4 4 4 0 0 0 0 0 0 0 0 1 2 3 1 0
0 0 0 0 0 0 0 0 0 0 0 4 2 7 7 2 0 1 1 0
0 0 0 0 0 0 0 0 0 6 2 4 4 2 0 4 7 0 6 0
0 0 0 7 5 5 3 0 0 7 5 0 5 6 4 2 6 3 1 5
0 0 0 1 2 6 3 3 7 0 3 6 2 4 5 6 7 7 5 7
0 0 0 3 7 6 1 5 3 3 4 5 7 6 0 4 3 3 1 1
0 1 2 1 5 6 1 6 1 6 5 1 6 0 0 3 4 1 7 6
0 2 3 2 2 7 3 0 0 3 2 5 2 1 0 6 5 1 6 5
0 2 5 7 0 7 1 3 3 4 1 3 3 0 2 3 3 2 4 1
4 0 0 7 2 4 2 2 1 3 1 6 5 5 6 2 5 1 1 6
5 6 4 0 3 6 5 2 2 6 1 2 0 1 7 5 7 2 2 2
1 6 3 1 4 4 1 0 3 0 4 2 7 2 0 2 3 6 2 5
1 5 7 2 1 1 4 4 2 1 0 2 7 1 6 2 6 6 2 2
3 7 0 6 5 0 4 0 6 6 7 1 3 1 1 1 5 1 6 6
0 4 0 1 6 2 1 0 7 0 4 2 5 2 7 0 2 7 1 6
0 7 3 0 1 7 6 2 0 0 4 2 4 1 3 3 7 0 1 3
0 1 1 4 3 7 4 5 2 2 4 7 4 7 7 4 6 0 1 6
0 5 2 2 1 4 6 3 7 0 6 3 5 0 0 6 4 4 2 1
0 1 2 4 5 6 0 2 0 0 5 6 2 4 6 4 7 6 3 7
7 7 4 2 3 0 0 4 0 0 7 2 7 5 6 1 4 5 5 4
50 50 20 12 18
0 0 0 0 0 0 0 0 0 0 0 0 4 5 0 0 0 0 0 4 2 0 5 2 1 5 3 3 0 0 4 0 5 1 7 2 6 0 7 0 0 0 2 0 0 0 0 0 0 0
6 7 0 0 0 0 0 0 0 0 0 0 4 5 5 3 6 3 0 2 3 3 0 0 5 6 1 5 3 4 7 6 2 2 1 1 6 5 6 4 6 2 0 0 0 0 2 3 1 0
0 2 6 5 7 6 0 0 0 0 0 0 6 2 0 5 6 2 0 4 1 5 0 0 2 0 7 7 0 6 0 6 2 2 4 1 2 2 1 6 6 6 0 2 2 5 0 6 5 0
0 0 0 4 7 2 7 3 7 0 0 0 0 6 7 6 5 1 1 1 2 2 1 3 1 2 7 6 1 2 1 2 4 1 6 1 1 7 3 1 6 6 6 1 1 1 7 0 0 0
0 0 0 5 4 0 6 3 3 7 0 0 0 6 4 3 2 5 3 1 6 1 0 4 1 0 5 7 6 3 1 1 3 6 1 1 6 3 6 7 3 3 6 5 0 7 2 2 4 6
0 6 0 7 6 0 7 4 0 5 3 0 4 3 2 0 5 7 3 0 1 3 6 7 7 5 1 7 5 2 0 5 3 1 3 7 1 1 1 5 2 5 1 3 6 7 7 6 4 3
5 2 0 2 6 5 0 5 6 1 6 5 5 1 7 1 2 3 6 5 1 6 7 7 6 4 1 7 5 2 0 1 3 4 6 4 5 7 2 6 5 6 2 5 6 5 6 5 1 6
1 2 0 7 0 5 5 0 7 6 2 2 1 3 5 5 3 6 3 7 6 4 1 3 1 3 7 0 3 7 0 2 5 6 1 3 4 1 5 1 7 4 1 7 7 0 4 7 5 5
7 6 0 3 5 1 4 0 5 2 5 0 1 3 5 5 4 4 6 1 6 5 7 6 2 1 6 5 5 3 0 5 7 1 1 3 6 2 2 2 4 5 7 4 5 1 1 0 7 3
2 5 4 0 3 1 4 5 6 3 7 0 4 5 3 6 4 5 1 7 4 7 3 1 1 7 7 1 1 5 6 4 7 1 2 6 4 1 7 2 7 1 6 0 5 0 0 0 1 0
3 0 2 5 1 7 1 1 1 6 5 1 3 1 3 1 1 7 1 3 6 5 5 3 1 3 1 6 2 3 2 6 6 1 1 7 5 7 5 7 1 6 0 3 5 1 5 3 0 0
0 0 3 2 0 1 4 1 4 1 0 7 3 2 2 4 2 4 4 6 1 1 1 7 2 4 7 4 3 6 3 5 1 6 1 3 7 7 2 6 3 2 1 0 4 6 2 6 3 0
0 0 5 4 7 2 4 6 4 1 6 7 2 2 1 6 2 1 5 4 7 2 2 1 0 7 6 1 7 2 5 7 0 4 1 6 4 0 3 0 0 5 5 0 7 7 0 3 0 0
0 0 6 4 3 1 3 1 4 7 2 1 2 4 3 4 1 6 2 1 5 1 1 6 0 7 2 7 2 4 7 4 0 3 7 7 3 3 5 2 0 4 3 0 4 2 0 1 3 5
0 1 0 5 6 4 4 6 5 7 0 6 1 4 5 6 2 1 2 4 4 1 1 2 6 1 6 2 0 3 7 3 0 0 5 1 7 6 6 6 1 3 4 2 1 0 7 0 5 5
0 7 2 1 4 2 7 3 0 2 1 4 3 5 1 1 1 1 7 1 4 4 1 7 6 0 1 2 0 5 2 0 0 0 5 4 0 3 7 5 3 1 4 1 2 7 2 6 6 4
0 1 3 0 3 4 6 3 4 2 4 0 7 5 1 1 2 7 1 6 4 2 2 0 5 6 3 3 1 1 0 0 0 3 0 4 5 4 3 1 1 6 1 6 2 0 1 4 7 7
0 3 0 0 2 6 1 4 7 5 1 4 3 2 5 1 4 3 6 3 0 2 4 5 7 5 6 2 0 5 6 3 6 4 6 2 0 0 6 0 7 2 2 6 0 0 0 0 0 0
0 6 7 1 6 4 3 6 0 2 6 7 6 2 1 6 6 6 2 0 0 7 3 0 1 1 2 0 0 0 3 1 6 7 5 6 4 1 7 5 2 0 2 6 0 0 0 0 4 0
0 6 7 7 3 3 0 2 0 1 6 4 1 1 1 6 2 3 3 4 2 3 5 0 5 7 7 6 2 7 2 7 3 1 0 5 6 7 1 6 4 1 5 0 0 0 0 0 0 0
0 7 3 0 4 3 0 0 6 6 0 5 1 1 1 1 1 6 0 0 7 0 0 0 2 4 3 2 3 3 6 0 0 1 0 2 6 7 3 4 0 3 2 4 0 0 0 0 0 7
0 0 4 7 2 0 0 0 1 4 2 4 7 7 2 4 2 4 0 5 6 0 0 0 7 0 2 7 4 4 1 6 1 4 2 3 6 2 0 6 5 3 5 0 3 5 6 0 0 1
0 0 7 4 7 0 3 0 4 4 6 2 4 7 0 5 7 1 3 6 5 6 6 7 3 3 6 6 4 2 0 0 3 0 4 7 2 6 4 0 6 2 4 6 7 1 7 2 7 1
0 0 2 6 0 0 6 5 0 4 1 2 2 2 2 7 2 1 0 4 6 4 1 0 1 1 2 2 0 4 4 2 0 0 3 0 3 6 2 2 7 6 6 0 4 6 0 2 2 2
0 0 4 4 7 1 1 1 7 3 7 6 2 3 3 0 5 0 0 6 1 2 6 3 1 7 0 4 7 4 3 6 1 5 1 0 3 7 4 0 3 0 5 6 2 0 0 3 0 5
0 0 7 3 0 5 4 0 7 4 0 0 4 5 7 1 3 2 3 3 5 3 5 3 5 5 5 5 4 2 3 6 0 3 1 7 2 4 5 3 0 0 5 3 6 0 0 7 3 6
0 0 3 5 0 0 1 1 1 0 0 0 5 3 5 5 1 2 7 0 4 3 1 6 7 1 5 7 4 4 5 7 0 3 6 3 3 7 7 4 1 3 5 2 0 0 0 7 7 4
0 0 7 6 3 5 0 7 2 7 7 5 4 0 0 7 0 4 0 0 3 2 3 1 5 7 4 6 0 3 5 5 2 0 6 0 0 0 2 1 1 4 3 6 2 0 5 1 1 6
0 0 1 0 4 1 0 2 5 0 0 0 6 7 3 7 0 0 0 0 4 3 3 3 0 1 0 0 0 1 5 1 5 4 5 1 7 0 0 5 0 5 6 0 3 2 5 0 3 4
0 0 0 0 0 4 0 2 3 1 6 6 6 3 5 3 6 0 0 0 4 7 0 6 1 7 1 0 0 5 5 2 5 1 0 1 1 3 3 4 1 4 2 0 6 3 0 0 6 4
6 4 2 2 0 0 0 3 3 0 0 1 4 0 5 0 2 0 7 0 1 7 7 1 5 7 0 0 0 3 1 5 5 6 0 6 2 6 4 0 7 6 5 1 3 3 7 0 2 5
0 0 0 7 7 0 0 4 4 3 1 6 1 0 1 3 3 1 4 5 7 3 7 0 0 4 0 0 0 7 3 7 2 2 0 1 5 0 7 5 5 2 5 1 0 2 0 0 3 2
0 0 0 3 0 0 0 0 1 2 6 7 1 6 7 0 3 5 2 7 3 0 4 5 2 0 0 0 0 2 5 7 3 7 5 6 0 0 2 2 5 4 7 6 4 5 1 4 4 6
0 4 3 0 0 0 0 3 5 6 3 2 0 3 6 0 6 0 0 1 4 3 6 2 4 7 4 7 1 5 0 4 0 0 2 0 0 0 3 7 6 1 2 5 3 5 2 3 3 3
0 0 0 1 4 0 0 2 1 0 2 0 0 1 7 3 4 3 3 4 7 0 6 7 4 7 3 1 6 1 7 3 4 4 7 5 2 1 3 7 2 5 2 3 3 2 3 0 1 2
0 0 0 0 1 1 0 0 5 7 3 6 6 0 0 6 5 4 2 7 0 0 4 5 5 0 5 7 3 3 0 3 5 5 3 6 0 0 3 5 4 0 0 7 5 1 6 0 0 7
0 0 0 0 5 6 3 1 5 2 0 7 7 7 0 0 1 0 3 6 4 1 6 7 2 1 6 5 2 0 0 7 4 5 0 0 0 0 0 6 6 0 0 5 6 0 2 3 4 5
0 0 7 1 0 1 6 5 6 0 0 5 4 5 7 1 1 6 5 2 2 0 3 7 4 5 2 6 4 0 0 3 4 0 0 0 0 0 0 7 7 7 7 6 4 3 4 4 0 0
0 0 0 1 3 0 0 3 7 1 1 0 4 1 4 4 2 6 1 6 2 2 7 4 2 4 1 7 1 6 4 3 3 1 3 4 0 0 3 2 0 2 0 1 3 3 4 7 1 5
0 0 0 3 4 0 0 2 0 5 5 0 0 1 4 4 0 4 0 1 6 6 4 2 1 0 0 3 7 0 4 3 3 2 3 5 3 5 0 4 0 5 0 3 0 7 7 3 5 6
0 0 0 7 2 0 0 4 2 2 6 2 2 5 0 5 0 3 4 3 5 5 2 0 4 0 0 5 0 0 4 1 6 4 4 3 4 0 0 5 0 1 1 2 0 7 3 4 0 4
0 0 1 1 4 4 1 0 0 0 3 5 4 5 4 2 7 4 6 1 6 7 0 3 0 7 1 7 6 6 3 0 5 7 6 6 4 7 3 4 5 0 0 0 0 6 1 1 5 3
0 0 4 2 5 7 4 4 2 1 2 1 3 4 7 2 7 2 1 6 3 3 0 7 5 6 6 4 5 5 3 3 2 7 5 3 1 4 7 0 0 0 0 0 0 3 1 5 6 5
0 0 0 4 4 1 0 0 6 0 0 7 5 7 5 1 7 3 6 0 2 4 3 4 7 7 3 0 0 0 1 5 5 0 6 7 7 7 4 4 3 6 3 7 5 0 1 1 0 2
0 0 0 1 3 4 7 2 5 0 0 4 4 0 5 2 2 0 1 7 0 1 1 3 6 5 2 6 2 7 7 3 6 7 1 3 4 6 7 5 3 7 4 6 0 0 0 4 3 1
0 0 0 2 1 6 3 5 4 0 0 6 0 0 6 7 0 0 5 2 0 7 7 0 7 0 0 7 7 6 0 0 1 1 0 1 0 1 3 1 0 0 4 7 7 0 0 0 2 6
0 0 0 2 4 0 6 7 2 4 1 5 6 3 0 0 0 0 4 2 7 1 1 5 2 0 0 7 2 2 3 1 3 5 5 7 7 4 0 3 4 2 3 0 0 4 6 6 0 1
0 0 0 4 6 1 0 3 6 4 7 3 5 0 0 0 0 0 0 7 0 0 3 6 2 1 0 2 3 4 6 7 5 0 7 0 5 4 5 1 5 0 0 0 0 4 5 3 1 0
1 3 6 5 5 2 3 7 6 1 0 6 7 3 2 5 6 7 6 6 0 0 7 1 0 5 5 0 3 0 2 0 7 4 5 3 2 5 1 5 3 0 0 0 1 2 0 1 0 0
1 7 3 0 2 0 7 0 4 6 1 1 5 0 7 0 5 7 7 2 6 0 0 1 0 2 3 3 4 2 7 5 3 7 0 0 4 6 6 6 3 0 0 0 7 7 7 5 7 2

1
6 6 5 3 3
0 0 1 1 2 0
0 0 1 0 2 0
0 0 1 0 2 0
0 0 1 1 2 0
0 0 0 1 7 0
0 0 0 1 0 0

1
6 6 5 3 3
0 0 1 1 2 0
0 0 1 0 2 0
0 0 1 0 2 0
0 0 1 1 2 0
0 0 0 1 7 0
0 0 0 1 0 0

13
...┼└└└........┼│─┼.
...........└│┘┘│.┼┼.
.........┐│└└│.└┘.┐.
...┘┌┌─..┘┌.┌┐└│┐─┼┌
...┼│┐──┘.─┐┃└┌┐┘┘┌┘
...─┘┐┼┌──└┏┛┐.└──┼┼
.┼│┼┌┐┼┐┼┐┏╋┓..─└┼┘┐
.│─││┘─..─┃┌┃┼.┐┌┼┐┌
.│┌┘.┘┼──┗╋━━.│──│└┼
└..┘│└││╋━╋┓┌┏┓│┏╋┼┐
┌┐└.─┐┌│┃┐╋┃.╋┛┏┛│││
┼┐─┼└└┼.─.┗┃┘┃.┃─┐│┌
┼┌┘│┼┼└└│┼.┃┘╋┓┃┐┓││
─┘.┐┌.└.┐┐┘▣━╋╋╋┏╋┓┐
.└.┼┐│┼.┘.└┃┏┃┛.┃┛╋┐
.┘─.┼┘┐│..└┃┗╋━━┛.┼─
.┼┼└─┘└┌││┗┛┗┛┘└┐.┼┐
.┌││┼└┐─┘.┐─┌..┐└└│┼
.┼│└┌┐.│..┌┐│└┐└┘┐─┘
┘┘└│─..└..┘│┘┌┐┼└┌┌└

18
............└┌.....└│.┌│┼┌──..└.┌┼┘│┐.┘...│.......
┐┘..........└┌┌─┐─.│──..┌┐┼┌─└┘┐││┼┼┐┌┐└┐│....│─┼.
.│┐┌┘┐......┐│.┌┐│.└┼┌..│.┘┘.┐.┐││└┼││┼┐┐┐.││┌.┐┌.
...└┘│┘─┘....┐┘┐┌┼┼┼││┼─┼│┘┐┼│┼│└┼┐┼┼┘─┼┐┐┐┼┼┼┘...
...┌└.┐──┘...┐└─│┌─┼┐┼.└┼.┌┘┐─┼┼─┐┼┼┐─┐┘──┐┌.┘││└┐
.┐.┘┐.┘└.┌─.└─│.┌┘─.┼─┐┘┘┌┼┘┌│.┌─┼─┘┼┼┼┌│┌┼─┐┘┘┐└─
┌│.│┐┌.┌┐┼┐┌┌┼┘┼│─┐┌┼┐┘┘┐└┼┘┌│.┼─└┐└┌┘│┐┌┐│┌┐┌┐┌┼┐
┼│.┘.┌┌.┘┐││┼─┌┌─┐─┘┐└┼─┼─┘.─┘.│┌┐┼─└┼┌┼┘└┼┘┘.└┘┌┌
┘┐.─┌┼└.┌│┌.┼─┌┌└└┐┼┐┌┘┐│┼┐┌┌─.┌┘┼┼─┐│││└┌┘└┌┼┼.┘─
│┌└.─┼└┌┐─┘.└┌─┐└┌┼┘└┘─┼┼┘┘┼┼┌┐└┘┼│┐└┼┘│┘┼┐.┌...┼.
─.│┌┼┘┼┼┼┐┌┼─┼─╋╋┛┼─┐┌┌─┼─┼┐│─│┐┐┼┼┘┌┘┌┘┼┐.─┌┼┌─..
..─│.┼└┼└┼.┘─│┃└┃└└┐┼┼┼┘│└┘└─┐─┌┼┐┼─┘┘│┐─│┼.└┐│┐─.
..┌└┘│└┐└┼┐┘││╋┓┃┼┌└┘││┼.┘┐┼┘│┌┘.└┼┐└.─..┌┌.┘┘.─..
..┐└─┼─┼└┘│┼│└─┗╋┓│┼┌┼┼┐.┘│┘│└┘└.─┘┘──┌│.└─.└│.┼─┌
.┼.┌┐└└┐┌┘.┐┼└┏┓┃╋│└└┼┼│┐┼┐│.─┘─..┌┼┘┐┐┐┼─└│┼.┘.┌┌
.┘│┼└│┘─.│┼└─┏╋╋╋╋┛┼└└┼┘┐.┼│.┌│...┌└.─┘┌─┼└┼│┘│┐┐└
.┼─.─└┐─└│└.┘┏╋╋┃┛┼┐└││.┌┐──┼┼...─.└┌└─┼┼┐┼┐│.┼└┘┘
.─..│┐┼└┘┌┼└─┃┏╋┗━┓─.│└┌┘┌┐│.┌┐─┐└┐│..┐.┘││┐......
.┐┘┼┐└─┐.│┐┘┓┃╋┓┐┐┃..┘─.┼┼│...─┼┐┘┌┐└┼┘┌│.│┐....└.
.┐┘┘──.│.┼┐┗╋╋╋┓│──└│─┌.┌┘┘┐│┘│┘─┼.┌┐┘┼┐└┼┌.......
.┘─.└─..┐┐.┏▣╋╋╋┼┐..┘...│└─│──┐..┼.│┐┘─└.─│└.....┘
..└┘│...┼└│┗┛┘┃└│└.┌┐...┘.│┘└└┼┐┼└│─┐│.┐┌─┌.─┌┐..┼
..┘└┘.─.└└┐│└┘.┌┘┼─┐┌┐┐┘──┐┐└│..─.└┘│┐└.┐│└┐┘┼┘│┘┼
..│┐..┐┌.└┼││││┘│┼.└┐└┼.┼┼││.└└│..─.─┐││┘┐┐.└┐.│││
..└└┘┼┼┼┘─┘┐│──.┌..┐┼│┐─┼┘.└┘└─┐┼┌┼.─┘└.─.┌┐│..─.┌
..┘─.┌└.┘└..└┌┘┼─│──┌─┌─┌┌┌┌└│─┐.─┼┘│└┌─..┌─┐..┘─┐
..─┌..┼┼┼...┌─┌┌┼│┘.└─┼┐┘┼┌┘└└┌┘.─┐──┘┘└┼─┌│...┘┘└
..┘┐─┌.┘│┘┘┌└..┘.└..─│─┼┌┘└┐.─┌┌│.┐...│┼┼└─┐│.┌┼┼┐
..┼.└┼.│┌...┐┘─┘....└───.┼...┼┌┼┌└┌┼┘..┌.┌┐.─│┌.─└
.....└.│─┼┐┐┐─┌─┐...└┘.┐┼┘┼..┌┌│┌┼.┼┼──└┼└│.┐─..┐└
┐└││...──..┼└.┌.│.┘.┼┘┘┼┌┘...─┼┌┌┐.┐│┐└.┘┐┌┼──┘.│┌
...┘┘..└└─┼┐┼.┼──┼└┌┘─┘..└...┘─┘││.┼┌.┘┌┌│┌┼.│..─│
...─....┼│┐┘┼┐┘.─┌│┘─.└┌│....│┌┘─┘┌┐..││┌└┘┐└┌┼└└┐
.└─....─┌┐─│.─┐.┐..┼└─┐│└┘└┘┼┌.└..│...─┘┐┼│┌─┌│───
...┼└..│┼.│..┼┘─└──└┘.┐┘└┘─┼┐┼┘─└└┘┌│┼─┘│┌│──│─.┼│
....┼┼..┌┘─┐┐..┐┌└│┘..└┌┌.┌┘──.─┌┌─┐..─┌└..┘┌┼┐..┘
....┌┐─┼┌│.┘┘┘..┼.─┐└┼┐┘│┼┐┌│..┘└┌.....┐┐..┌┐.│─└┌
..┘┼.┼┐┌┐..┌└┌┘┼┼┐┌││.─┘└┌│┐└..─└......┘┘┘┘┐└─└└..
...┼─..─┘┼┼.└┼└└│┐┼┐││┘└│└┼┘┼┐└──┼─└..─│.│.┼──└┘┼┌
...─└..│.┌┌..┼└└.└.┼┐┐└│┼..─┘.└──│─┌─┌.└.┌.─.┘┘─┌┐
...┘│..└││┐││┌.┌.─└─┌┌│.└..┌..└┼┐└└─└..┌.┼┼│.┘─└.└
..┼┼└└┼...─┌└┌└│┘└┐┼┐┘.─.┘┼┘┐┐─.┌┘┐┐└┘─└┌....┐┼┼┌─
..└│┌┘└└│┼│┼─└┘│┘│┼┐──.┘┌┐┐└┌┌──│┘┌─┼└┘......─┼┌┐┌
...└└┼..┐..┘┌┘┌┼┘─┐.│└─└┘┘─...┼┌┌.┐┘┘┘└└─┐─┘┌.┼┼.│
...┼─└┘│┌..└└.┌││.┼┘.┼┼─┐┌│┐│┘┘─┐┘┼─└┐┘┌─┘└┐...└─┼
...│┼┐─┌└..┐..┐┘..┌│.┘┘.┘..┘┘┐..┼┼.┼.┼─┼..└┘┘...│┐
...│└.┐┘│└┼┌┐─....└│┘┼┼┌│..┘││─┼─┌┌┘┘└.─└│─..└┐┐.┼
...└┐┼.─┐└┘─┌......┘..─┐│┼.│─└┐┘┌.┘.┌└┌┼┌....└┌─┼.
┼─┐┌┌│─┘┐┼.┐┘─│┌┐┘┐┐..┘┼.┌┌.─.│.┘└┌─│┌┼┌─...┼│.┼..
┼┘─.│.┘.└┐┼┼┌.┘.┌┘┘│┐..┼.│──└│┘┌─┘..└┐┐┐─...┘┘┘┌┘│

*/